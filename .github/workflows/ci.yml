name: CI
on: [push]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - id: install
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: restore build & cargo cache
        uses: Swatinem/rust-cache@v1

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --locked --workspace

  fmt:
    name: Format
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - id: install
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt

      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - id: install
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy

      - name: restore build & cargo cache
        uses: Swatinem/rust-cache@v1

      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --workspace --locked -- -D warnings

  test:
    name: Test
    runs-on: ubuntu-latest
    container: rust:latest

    steps:
      - uses: actions/checkout@v2
      - id: install
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: restore build & cargo cache
        uses: Swatinem/rust-cache@v1

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace

  cargo-deny:
    name: cargo-deny check
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        checks:
          - advisories
          - bans licenses sources
    steps:
      - uses: actions/checkout@v2
      - uses: EmbarkStudios/cargo-deny-action@v1
        with:
          command: check ${{ matrix.checks }}
